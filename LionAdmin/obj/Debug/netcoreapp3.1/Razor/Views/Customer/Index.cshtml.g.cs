#pragma checksum "E:\PersonalProjects\LionAdmin\LionAdmin\Views\Customer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a23d931726d62f738e5ad2a1964dacc6d62d00ce"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Customer_Index), @"mvc.1.0.view", @"/Views/Customer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\PersonalProjects\LionAdmin\LionAdmin\Views\_ViewImports.cshtml"
using LionAdmin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\PersonalProjects\LionAdmin\LionAdmin\Views\_ViewImports.cshtml"
using LionAdmin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a23d931726d62f738e5ad2a1964dacc6d62d00ce", @"/Views/Customer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3f5ec27a57fe23283360f9168d23aa92842ec9c0", @"/Views/_ViewImports.cshtml")]
    public class Views_Customer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LionAdmin.Service.CustomersViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "E:\PersonalProjects\LionAdmin\LionAdmin\Views\Customer\Index.cshtml"
  
    ViewData["Title"] = "Home Page";


#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>

    
    

</style>

<div class=""col-sm-12 bac-color"">

    <div class=""col-xs-2 form-group"">

        <a class=""btn btn-success addBookingbtn txtClr "" onclick=""AddNewCustomer()"">Add</a>
    </div>
    <div class=""table-responsive date-margin"">

        <table class=""table table-bordered"" id=""BookingDataTable"">

            <thead>
                <tr");
            BeginWriteAttribute("class", " class=\"", 474, "\"", 482, 0);
            EndWriteAttribute();
            WriteLiteral(@">

                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Phone No</th>
                    <th>Email</th>
                    <th>Address</th>
                    <th>Home Address</th>
                    <th>Status</th>
                    <th>Action</th>
                    <th>Action</th>

                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral(@"

    <script>

     $(document).ready(function () {
            //$(""#MyDataTable1"").DataTable();
            BindDataTable();

     })

        var oTable;
        var FilterRecord = function () {

            BindDataTable();
        }

        var BindDataTable = function (response) {

            if ($.fn.DataTable.isDataTable(""#BookingDataTable"")) {
                oTable.draw();

            }
            else {
                oTable = $(""#BookingDataTable"").DataTable({
                    ""responsive"": true,
                    ""bServerSide"": true,
                    ""sAjaxSource"": '");
#nullable restore
#line 71 "E:\PersonalProjects\LionAdmin\LionAdmin\Views\Customer\Index.cshtml"
                               Write(Url.Action("GetAllCustomer", "Customer"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    ""fnServerData"": function (sSource, aoData, fnCallback) {
                        var EName = $(""#EName"").val();
                        aoData.push({ ""name"": ""EName"", ""value"": EName });
                        $.ajax({
                            type: ""Get"",
                            data: aoData,
                            url: sSource,
                            success: fnCallback
                        });

                    },
                    ""aoColumns"": [


                        { ""mData"": ""firstName"" },
                        { ""mData"": ""lastName"" },
                        { ""mData"": ""phonNo"" },
                        { ""mData"": ""email"" },
                        { ""mData"": ""companyAddress"" },
                        { ""mData"": ""homeAddress"" },
                        { ""mData"": ""customerStatus"" },
                        {
                            ""mData"": ""id"",
                            ""render"": function (id, type, full, meta) {
");
                WriteLiteral("                                return \'<a class=\"btn btn-dark\" style=\"padding: 0px 8px;\"  href=\"");
#nullable restore
#line 96 "E:\PersonalProjects\LionAdmin\LionAdmin\Views\Customer\Index.cshtml"
                                                                                            Write(Url.Action("DisableCustomer", "Customer"));

#line default
#line hidden
#nullable disable
                WriteLiteral("/\' + id +\'\" onclick=\"return confirm(\' + \"\'You want to InActive Status ?\'\" + \')\">Status</a>\'\r\n                            }\r\n                        },\r\n");
                WriteLiteral(@"                         {
                            ""mData"": ""id"",
                            ""render"": function (id, type, full, meta) {
                                return '<a class=""btn btn-success""  style=""padding: 0px 8px;"" onclick=""EditCustomer('+""'"" +id+""'"" +')"">Edit</a>'
                            }
                        }


                    ]

                });
            }
        }


        function AddNewCustomer() {
            window.location.href=""/Customer/Create""
        }
        function EditCustomer(guid) {
            var id = guid;
            window.location.href = ""/Customer/GetCustomerById?customerId="" + id;
        }
        //function DisableCustomer(guid) {
        //    var id = guid;
        //    window.location.href = ""/Customer/GetCustomerById?customerId="" + id;
        //}
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LionAdmin.Service.CustomersViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
